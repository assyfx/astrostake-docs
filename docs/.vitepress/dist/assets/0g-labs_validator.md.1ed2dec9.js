import{_ as c,c as i,d as a,w as n,a as t,r as o,o as r,b as s,e as l}from"./app.dd4d1028.js";const $=JSON.parse('{"title":"Validator Node","description":"","frontmatter":{},"headers":[{"level":2,"title":"Requirements","slug":"requirements","link":"#requirements","children":[]},{"level":2,"title":"Install","slug":"install","link":"#install","children":[{"level":3,"title":"2. Auto-install script powered by ITRocket \u{1F680}","slug":"_2-auto-install-script-powered-by-itrocket-\u{1F680}","link":"#_2-auto-install-script-powered-by-itrocket-\u{1F680}","children":[]}]},{"level":2,"title":"Delete node","slug":"delete-node","link":"#delete-node","children":[]}],"relativePath":"0g-labs/validator.md"}'),d={name:"0g-labs/validator.md"},u=t(`<h1 id="validator-node" tabindex="-1">Validator Node <a class="header-anchor" href="#validator-node" aria-hidden="true">#</a></h1><p>This guide will help you set up a Validator Node for OG Labs. For official documentation, check <a href="https://docs.0g.ai/run-a-node/validator-node" target="_blank" rel="noreferrer">here.</a></p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-hidden="true">#</a></h2><ul><li>CPU: 8 Cores</li><li>Memory: 64GB RAM</li><li>Disk: 1 TB of storage (NVME)</li><li>Bandwidth: 100 Mbps (Download / Upload)</li></ul><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h2><p><strong>1. Install dependencies</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">sudo apt update &amp;&amp; sudo apt upgrade -y</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo apt install curl git wget htop tmux build-essential jq make lz4 gcc unzip -y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="highlight"><h3 id="_2-auto-install-script-powered-by-itrocket-\u{1F680}" tabindex="-1">2. Auto-install script powered by ITRocket \u{1F680} <a class="header-anchor" href="#_2-auto-install-script-powered-by-itrocket-\u{1F680}" aria-hidden="true">#</a></h3><p>Smooth, reliable, and straight to the point \u2014 just how we like it at <strong>AstroStake</strong>.</p><p><em>Why write it from scratch when it\u2019s already clean and battle-tested?</em></p><p><strong>Huge thanks to <a href="https://itrocket.net" target="_blank" rel="noreferrer">ITRocket</a> for keeping things clean and effortless.</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;(</span><span style="color:#C3E88D;">curl -s https://itrocket.net/api/testnet/og/autoinstall/</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div></div><p><strong>3. Setup wallet</strong></p>`,9),h=s("p",null,"To create a new wallet, use the following command. Don\u2019t forget to save the mnemonic",-1),C=s("div",{class:"language-"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"0gchaind keys add $WALLET")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),A=s("p",null,"To restore existing wallet, use the following command",-1),g=s("div",{class:"language-"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"0gchaind keys add $WALLET --recover")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),y=s("p",null,"If you use metamask or EVM, use this command to restore your wallet",-1),_=s("div",{class:"language-"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"0gchaind keys add $WALLET --eth --recover")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}})])])])],-1),D=t(`<p><strong>Save wallet and validator address</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">WALLET_ADDRESS=$(0gchaind keys show $WALLET -a)</span></span>
<span class="line"><span style="color:#A6ACCD;">VALOPER_ADDRESS=$(0gchaind keys show $WALLET --bech val -a)</span></span>
<span class="line"><span style="color:#A6ACCD;">echo &quot;export WALLET_ADDRESS=&quot;$WALLET_ADDRESS &gt;&gt; $HOME/.bash_profile</span></span>
<span class="line"><span style="color:#A6ACCD;">echo &quot;export VALOPER_ADDRESS=&quot;$VALOPER_ADDRESS &gt;&gt; $HOME/.bash_profile</span></span>
<span class="line"><span style="color:#A6ACCD;">source $HOME/.bash_profile</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>4. Check block sync</strong></p><p>Script by ITRocket</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">#!/bin/bash</span></span>
<span class="line"><span style="color:#A6ACCD;">rpc_port=$(grep -m 1 -oP &#39;^laddr = &quot;\\K[^&quot;]+&#39; &quot;$HOME/.0gchain/config/config.toml&quot; | cut -d &#39;:&#39; -f 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">while true; do</span></span>
<span class="line"><span style="color:#A6ACCD;">  local_height=$(curl -s localhost:$rpc_port/status | jq -r &#39;.result.sync_info.latest_block_height&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">  network_height=$(curl -s https://og-testnet-rpc.itrocket.net/status | jq -r &#39;.result.sync_info.latest_block_height&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  if ! [[ &quot;$local_height&quot; =~ ^[0-9]+$ ]] || ! [[ &quot;$network_height&quot; =~ ^[0-9]+$ ]]; then</span></span>
<span class="line"><span style="color:#A6ACCD;">    echo -e &quot;\\033[1;31mError: Invalid block height data. Retrying...\\033[0m&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    sleep 5</span></span>
<span class="line"><span style="color:#A6ACCD;">    continue</span></span>
<span class="line"><span style="color:#A6ACCD;">  fi</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  blocks_left=$((network_height - local_height))</span></span>
<span class="line"><span style="color:#A6ACCD;">  echo -e &quot;\\033[1;33mNode Height:\\033[1;34m $local_height\\033[0m \\033[1;33m| Network Height:\\033[1;36m $network_height\\033[0m \\033[1;33m| Blocks Left:\\033[1;31m $blocks_left\\033[0m&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  sleep 5</span></span>
<span class="line"><span style="color:#A6ACCD;">done</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>5. Check node status</strong></p><p>Make sure <code>&quot;catching_up&quot;: false</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">0gchaind status 2&gt;&amp;1 | jq</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>6. Create Validator</strong></p><p>Check your balances first. change <code>wallet_name</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">0gchaind q bank balances $(0gchaind keys show &quot;wallet_name&quot; -a)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Edit Validator Info</p><p>Edit <code>moniker</code> <code>identity</code> <code>website</code> <code>details</code></p><p><code>amount</code> 1000000ua0gi = 1 A0GI</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">0gchaind tx staking create-validator \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--amount 1000000ua0gi \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--from $WALLET \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--commission-rate 0.1 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--commission-max-rate 0.2 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--commission-max-change-rate 0.01 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--min-self-delegation 1 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--pubkey $(0gchaind tendermint show-validator) \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--moniker &quot;test&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--identity &quot;&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--website &quot;&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--details &quot;I love blockchain \u2764\uFE0F&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--chain-id zgtendermint_16600-2 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--gas-adjustment 1.5 --gas auto --gas-prices 0.00252ua0gi \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></div><p><strong>Check Validator info</strong></p><p>change <code>wallet_name</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">0gchaind q staking validator $(0gchaind keys show &quot;wallet_name&quot; --bech val -a)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="delete-node" tabindex="-1">Delete node <a class="header-anchor" href="#delete-node" aria-hidden="true">#</a></h2><div class="danger custom-block"><p class="custom-block-title">\u26A0\uFE0F Critical: Backup Your Validator Key!</p><p>Do <strong>not</strong> lose this key \u2014 it is required to run your validator.</p><p>File location: <code>/root/.0gchain/config/priv_validator_key.json</code></p></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">sudo systemctl stop 0gchaind</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo systemctl disable 0gchaind</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo rm -rf /etc/systemd/system/0gchaind.service</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo rm $(which 0gchaind)</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo rm -rf $HOME/.0gchain</span></span>
<span class="line"><span style="color:#A6ACCD;">sed -i &quot;/OG_/d&quot; $HOME/.bash_profile</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,18);function m(b,k,f,v,q,w){const e=o("PluginTabsTab"),p=o("PluginTabs");return r(),i("div",null,[u,a(p,null,{default:n(()=>[a(e,{label:"Create Wallet"},{default:n(()=>[h,C]),_:1}),a(e,{label:"Restore Wallet"},{default:n(()=>[A,g]),_:1}),a(e,{label:"Restore Wallet (EVM)"},{default:n(()=>[y,_]),_:1})]),_:1}),D])}const E=c(d,[["render",m]]);export{$ as __pageData,E as default};
